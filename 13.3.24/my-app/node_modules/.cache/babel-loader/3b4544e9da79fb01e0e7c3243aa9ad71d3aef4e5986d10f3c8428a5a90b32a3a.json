{"ast":null,"code":"var _jsxFileName = \"/Users/masha/w23/13.3.24/my-app/src/components/learning/Clocks/ClockTZ.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Option 1 - Desctructing and default values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockTZ = ({\n  name,\n  timeZone = 'Asia/Jerusalem'\n}) => {\n  _s();\n  // Function 'useState' returns an Array with 2 elements --> (1) data state, (2) setter for the data states\n  // ARRAY destruction --> ARRAY must exist for this to work\n  const [date, setDate] = useState(new Date());\n  // const arrState = useState(props.date);\n  // arrState[0] // name\n  // arrState[1] // setName\n\n  // 'useEffect' with an empty dependency array will only run once after initial mounting\n  // This is equivalent to 'componentDidMount' in a class component\n  useEffect(() => {\n    console.log('componentDidMount');\n    const timerID = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    // This is the 'unmounting' event, equiavalent to 'componentWillUnmount' in a class component\n    return () => {\n      console.log('componentWillUnmount');\n      clearInterval(timerID);\n    };\n  }, []);\n\n  // Option 2 - Default values for properties\n  // propsTimeZone = !propsTimeZone ? 'Asia/Jerusalem' : propsTimeZone;\n  // timeZone = timeZone || 'Asia/Jerusalem';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [name, \": \", date.toLocaleString(\"en-US\", {\n        timeZone: timeZone\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ClockTZ, \"Gqi45WOZhU2c0BLYX0HoJeiR0fk=\");\n_c = ClockTZ;\nexport default ClockTZ;\nvar _c;\n$RefreshReg$(_c, \"ClockTZ\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ClockTZ","name","timeZone","_s","date","setDate","Date","console","log","timerID","setInterval","clearInterval","children","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/masha/w23/13.3.24/my-app/src/components/learning/Clocks/ClockTZ.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\n// Option 1 - Desctructing and default values\nconst ClockTZ = ({ name, timeZone = 'Asia/Jerusalem' }) => {\n\n    // Function 'useState' returns an Array with 2 elements --> (1) data state, (2) setter for the data states\n    // ARRAY destruction --> ARRAY must exist for this to work\n    const [date, setDate] = useState(new Date());\n    // const arrState = useState(props.date);\n    // arrState[0] // name\n    // arrState[1] // setName\n\n\n    // 'useEffect' with an empty dependency array will only run once after initial mounting\n    // This is equivalent to 'componentDidMount' in a class component\n    useEffect(() => {\n        console.log('componentDidMount');\n        const timerID = setInterval(() => {\n            setDate(new Date());\n        }, 1000);\n\n        // This is the 'unmounting' event, equiavalent to 'componentWillUnmount' in a class component\n        return () => {\n            console.log('componentWillUnmount');\n            clearInterval(timerID);\n        }\n    }, []);\n\n    // Option 2 - Default values for properties\n    // propsTimeZone = !propsTimeZone ? 'Asia/Jerusalem' : propsTimeZone;\n    // timeZone = timeZone || 'Asia/Jerusalem';\n\n    return (\n        <div>\n            <div>{name}: {date.toLocaleString(\"en-US\", { timeZone: timeZone })}</div>\n        </div>\n    )\n}\n\nexport default ClockTZ;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ,GAAG;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAEvD;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;EAC5C;EACA;EACA;;EAGA;EACA;EACAT,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,MAAMC,OAAO,GAAGC,WAAW,CAAC,MAAM;MAC9BL,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAM;MACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCG,aAAa,CAACF,OAAO,CAAC;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;;EAEA,oBACIV,OAAA;IAAAa,QAAA,eACIb,OAAA;MAAAa,QAAA,GAAMX,IAAI,EAAC,IAAE,EAACG,IAAI,CAACS,cAAc,CAAC,OAAO,EAAE;QAAEX,QAAQ,EAAEA;MAAS,CAAC,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEd,CAAC;AAAAd,EAAA,CAlCKH,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}